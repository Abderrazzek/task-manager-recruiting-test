[{"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/index.js":"1","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/App.js":"2","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/reportWebVitals.js":"3","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/Routes.js":"4","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/pages/Login.jsx":"5","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/pages/Dashboard.jsx":"6","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/pages/Page404.jsx":"7","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/services/Store.js":"8","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/services/CheckAuth.js":"9","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/components/TasksList.jsx":"10","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/components/AddTask.jsx":"11","/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/components/Task.jsx":"12"},{"size":607,"mtime":1610151268382,"results":"13","hashOfConfig":"14"},{"size":142,"mtime":1610151268382,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1610134710907,"results":"16","hashOfConfig":"14"},{"size":595,"mtime":1610140535730,"results":"17","hashOfConfig":"14"},{"size":2794,"mtime":1610159183722,"results":"18","hashOfConfig":"14"},{"size":1396,"mtime":1610171077440,"results":"19","hashOfConfig":"14"},{"size":117,"mtime":1610151399790,"results":"20","hashOfConfig":"14"},{"size":1207,"mtime":1610155217241,"results":"21","hashOfConfig":"14"},{"size":558,"mtime":1610167071555,"results":"22","hashOfConfig":"14"},{"size":579,"mtime":1610167668280,"results":"23","hashOfConfig":"14"},{"size":2243,"mtime":1610161984311,"results":"24","hashOfConfig":"14"},{"size":4290,"mtime":1610170534472,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1mjo2id",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/index.js",[],["52","53"],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/App.js",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/reportWebVitals.js",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/Routes.js",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/pages/Login.jsx",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/pages/Dashboard.jsx",["54"],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/pages/Page404.jsx",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/services/Store.js",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/services/CheckAuth.js",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/components/TasksList.jsx",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/components/AddTask.jsx",[],"/home/rzouga/Desktop/test/Test 2/task-manager-recruiting-test/src/components/Task.jsx",["55","56"],"import React, { useContext, useState } from 'react'\nimport { Card, Button, Modal, Form, Input } from 'antd';\n\nimport { Store } from '../services/Store'\n\nconst Task = ({ data, edit }) => {\n    const [isEditModalVisible, setIsEditModalVisible] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const { state, dispatch } = useContext(Store);\n    const { taskList } = state;\n\n    const handleDelete = () => {\n        let newTaskList = taskList.filter(task => task.id !== data.id)\n        dispatch({\n            type: 'SET_TASK_LIST',\n            payload: newTaskList\n        });\n    }\n\n    const handleStateChange = () => {\n        let updatedTaskList = taskList\n        updatedTaskList[taskList.findIndex(item => item.id == data.id)] = { ...data, complete: !data.complete }\n        dispatch({\n            type: 'SET_TASK_LIST',\n            payload: updatedTaskList\n        });\n    }\n\n    const handleCancel = () => {\n        setIsError(false)\n        setIsEditModalVisible(false);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        setIsError(true)\n    }\n    const onFinish = (values) => {\n        setIsError(false)\n        setIsEditModalVisible(false)\n        let updatedTaskList = taskList\n        updatedTaskList[taskList.findIndex(item => item.id == data.id)] = { ...data, name: values.name, description: values.description }\n        dispatch({\n            type: 'SET_TASK_LIST',\n            payload: updatedTaskList\n        });\n    }\n\n    return (\n        <>\n            <Card key={data.id} >\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'space-between' }}>\n                    <div><text style={{ fontWeight: 'bold' }}>{data.name}</text>: <text>{data.description}</text> - <Button style={{ paddingLeft: 0, paddingRight: 0 }} type=\"link\" onClick={() => handleDelete()}>Supprimer</Button> {edit === true ? (<Button style={{ paddingLeft: 0 }} type=\"link\" onClick={() => setIsEditModalVisible(true)}>Modifier</Button>) : ('')}</div>\n                    <Button style={{ backgroundColor: data.complete ? 'green' : 'red', color: 'white', borderRadius: '6px', height: 30 }} onClick={() => handleStateChange()}>{data.complete ? 'Complétée' : 'Non complétée'}</Button>\n                </div>\n            </Card >\n            <Modal title=\"Basic Modal\" visible={isEditModalVisible} onCancel={handleCancel} footer={null}>\n                <Form\n                    style={{ maxWidth: 500 }}\n                    name=\"basic\"\n                    initialValues={{\n                        remember: true,\n                    }}\n                    layout=\"vertical\"\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Nom de la tâche\"\n                        name=\"name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Insérer un nom de tâche',\n                            },\n                        ]}\n                    >\n                        <Input placeholder={data.name} />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Description de la tâche en une ligne\"\n                        name=\"description\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Insérer une desciption',\n                            },\n                        ]}\n                    >\n                        <Input placeholder={data.description} />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\n                            <Button type=\"primary\" htmlType=\"submit\" style={{ borderRadius: '6px' }}>\n                                Modifier la tâche\n          </Button></div>\n                    </Form.Item>\n                    {isError ? <div style={{ color: 'red', display: 'inline-block' }}>Remplit les deux champs d'abord</div> : ''}\n                </Form>\n            </Modal>\n        </>)\n}\nexport default Task",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":8,"column":13,"nodeType":"63","messageId":"64","endLine":8,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":22,"column":60,"nodeType":"67","messageId":"68","endLine":22,"endColumn":62},{"ruleId":"65","severity":1,"message":"66","line":41,"column":60,"nodeType":"67","messageId":"68","endLine":41,"endColumn":62},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]